//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmployeeDataAccess
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;

    public partial class Employee
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        public int EmpId { get; set; }

        [Required(ErrorMessage = "Field Required")]
        [DataType(DataType.Text)]
        public string EmpName { get; set; }

        [Required(ErrorMessage = "Field Required")]
        [RegularExpression(@"^[a-zA-Z0-9._]+@[a-zA-Z]+\.[a-zA-Z]{2,3}$", ErrorMessage = "Invalid Email Address")]
        public string EmailId { get; set; }

        [Required(ErrorMessage = "Field Required")]
        [RegularExpression(@"^(?=.*\d)(?=.*[a-z])(?=.*\W).{7,15}$", ErrorMessage = "Should contains atleast 1 Number, 1 Lowrcase, 1 Special Char and Minlength=7")]
        public string Password { get; set; }

        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]
        [Required(ErrorMessage = "Field Required")]
        public DateTime EmpDob { get; set; }

        [Required(ErrorMessage = "Field Required")]
        [RegularExpression("[6789][0-9]{9}", ErrorMessage = "Invalid Mobile Number")]
        public string Mobile { get; set; }

        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]
        [Required(ErrorMessage = "Field Required")]
        public DateTime EmpDoj { get; set; }

        [Required(ErrorMessage = "Field Required")]
        public string Designation { get; set; }

        [Required(ErrorMessage = "Field Required")]
        [Range(1000, double.MaxValue, ErrorMessage = "Salary must be greater than 1000")]
        public Nullable<int> EmpSalary { get; set; }
        public Nullable<bool> IsActive { get; set; }

        
    }
}
